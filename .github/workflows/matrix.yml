name: Matrix Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-matrix:
    name: Test on ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Exclude some combinations to reduce CI time
          - os: windows-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.10"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run tests
      run: |
        python -m pytest --cov=src/pom_reader --cov-report=xml

    - name: Test CLI functionality
      run: |
        python -m pom_reader.cli --help
        python -m pom_reader.cli --version
        python -m pom_reader.cli analyze resources/pom.xml --format json > /dev/null

    - name: Test logging functionality
      run: |
        python -m pom_reader.cli --log-level DEBUG analyze resources/pom.xml --format table > /dev/null
        # Check if log files were created
        if [ "${{ runner.os }}" = "Windows" ]; then
          if [ -f "$USERPROFILE\.local\logs\pom-reader\pom-reader.log" ]; then
            echo "Log files created successfully on Windows"
          else
            echo "Log files not found on Windows"
            exit 1
          fi
        else
          if [ -f "$HOME/.local/logs/pom-reader/pom-reader.log" ]; then
            echo "Log files created successfully on ${{ runner.os }}"
          else
            echo "Log files not found on ${{ runner.os }}"
            exit 1
          fi
        fi

    - name: Upload coverage reports
      if: matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
        path: coverage.xml

  lint-matrix:
    name: Lint on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e ".[dev]"

    - name: Run ruff linter
      run: |
        python -m ruff check src/ tests/

    - name: Run mypy type checker
      run: |
        python -m mypy src/

    - name: Run isort check
      run: |
        python -m isort --check-only src/ tests/

    - name: Run black check
      run: |
        python -m black --check src/ tests/

  build-matrix:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}
        path: dist/
