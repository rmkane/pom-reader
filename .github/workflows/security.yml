name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run bandit security scan
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -f txt || echo "bandit found security issues - see report for details"

    - name: Run safety check
      run: |
        pip install safety
        safety check --json --output safety-report.json || true
        safety check || echo "safety check found issues - see report for details"

    - name: Run semgrep scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/python
        generateSarif: "1"

    - name: Check SARIF file
      run: |
        echo "Checking SARIF file..."
        if [ -f "semgrep.sarif" ]; then
          echo "SARIF file exists"
          ls -la semgrep.sarif
          if [ -s "semgrep.sarif" ]; then
            echo "SARIF file is not empty"
            echo "File size: $(wc -c < semgrep.sarif) bytes"
          else
            echo "SARIF file is empty"
          fi
        else
          echo "SARIF file does not exist"
        fi
        echo "GitHub event: ${{ github.event_name }}"
        echo "GitHub ref: ${{ github.ref }}"

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('semgrep.sarif') != '' && github.event_name != 'pull_request'
      continue-on-error: true  # Allow workflow to continue even if SARIF upload fails
      with:
        sarif_file: semgrep.sarif

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
          semgrep.sarif

  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run pip-audit
      run: |
        pip install pip-audit
        pip-audit --format=json --output=pip-audit-report.json || true
        pip-audit || echo "pip-audit found vulnerabilities - see report for details"

    - name: Run safety check on dependencies
      run: |
        pip install safety
        safety check --json --output=safety-deps-report.json || true
        safety check || echo "safety check found issues - see report for details"

    - name: Upload dependency security reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-security-reports
        path: |
          pip-audit-report.json
          safety-deps-report.json

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
